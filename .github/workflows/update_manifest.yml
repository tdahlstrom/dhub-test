name: Update_Manifest
on:
  repository_dispatch:
    types: [event-arm64-finished]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ github.event.client_payload.OLD_AMD_TAG }}
      - run: echo ${{ github.event.client_payload.OLD_ARM_TAG }}
      - run: echo ${{ github.event.client_payload.NEW_AMD_TAG }}
      - run: echo ${{ github.event.client_payload.NEW_ARM_TAG }}

      - name: Download hub-tool
        run: |
          curl -OL https://github.com/docker/hub-tool/releases/download/v0.4.6/hub-tool-linux-amd64.tar.gz

      - name: Install hub-tool
        run: |
          tar -xvzf hub-tool-linux-amd64.tar.gz
          rm hub-tool-linux-amd64.tar.gz
          mv ./hub-tool ./hub-tool-dir
          mv ./hub-tool-dir/hub-tool ./hub-tool
          rm -rf ./hub-tool-dir

      - name: Check if :latest__amd64 and :latest_arm64 tags are present on Docker Hub
        run: |
          if curl -s -S 'https://registry.hub.docker.com/v2/repositories/tjdahl/dhub-test/tags/' | jq '."results"[]["name"]' | sort | grep -q "latest__amd64"; then
            :
          else
            echo "latest__amd64 tag isn't present on Docker Hub."
            exit 1
          fi

          if curl -s -S 'https://registry.hub.docker.com/v2/repositories/tjdahl/dhub-test/tags/' | jq '."results"[]["name"]' | sort | grep -q "latest__arm64"; then
            :
          else
            echo "latest__arm64 tag isn't present on Docker Hub."
            exit 1
          fi

      - name: Log into Docker Hub with hub-tool
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          # Fool the login command (https://github.com/docker/hub-tool/pull/198)
          # ./hub-tool login
          # Token commands thank to https://stackoverflow.com/a/59334315/5155484
          HUB_TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d "{\"username\": \"$DOCKER_USERNAME\", \"password\": \"$DOCKER_PASSWORD\"}" https://hub.docker.com/v2/users/login/ | jq -r .token)
          USERNAME="$(printf '%s:' "$DOCKER_USERNAME" | base64 -w0)"
          USER_PASS="$(printf '%s:%s' "$DOCKER_USERNAME" "$DOCKER_PASSWORD" | base64 -w0)"
          mkdir -p ~/.docker/
          printf '{"auths": {"hub-tool": {"auth": "%s"}, "hub-tool-refresh-token": {"auth": "%s"}, "hub-tool-token": { "auth": "%s", "identitytoken": "%s"}}}' \
            "$USER_PASS" "$USERNAME" \
            "$USERNAME" "$HUB_TOKEN" \
            > ~/.docker/config.json

      - name: Remove latest manifest from Docker Hub if present
        run: |
          if curl -s -S 'https://registry.hub.docker.com/v2/repositories/tjdahl/dhub-test/tags/' | jq '."results"[]["name"]' | sort | grep -q "latest"; then
            ./hub-tool tag rm --force tjdahl/dhub-test:latest || true
          fi

      - name: Logout of Docker Hub with hub-tool
        run: |
          ./hub-tool logout

      - name: Log into Docker Hub with docker
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin

      - name: Generate manifest for images and push
        run: |
          docker manifest create tjdahl/dhub-test:latest \
          --amend tjdahl/dhub-test:${{ github.event.client_payload.NEW_AMD_TAG }} \
          --amend tjdahl/dhub-test:${{ github.event.client_payload.NEW_ARM_TAG }}
          docker manifest push tjdahl/dhub-test:latest

      - name: Logout of Docker Hub with docker
        run: |
          docker logout 

      - name: Log into Docker Hub with hub-tool
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          # Fool the login command (https://github.com/docker/hub-tool/pull/198)
          # ./hub-tool login
          # Token commands thank to https://stackoverflow.com/a/59334315/5155484
          HUB_TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d "{\"username\": \"$DOCKER_USERNAME\", \"password\": \"$DOCKER_PASSWORD\"}" https://hub.docker.com/v2/users/login/ | jq -r .token)
          USERNAME="$(printf '%s:' "$DOCKER_USERNAME" | base64 -w0)"
          USER_PASS="$(printf '%s:%s' "$DOCKER_USERNAME" "$DOCKER_PASSWORD" | base64 -w0)"
          mkdir -p ~/.docker/
          printf '{"auths": {"hub-tool": {"auth": "%s"}, "hub-tool-refresh-token": {"auth": "%s"}, "hub-tool-token": { "auth": "%s", "identitytoken": "%s"}}}' \
            "$USER_PASS" "$USERNAME" \
            "$USERNAME" "$HUB_TOKEN" \
            > ~/.docker/config.json

      - name: Remove old amd64 tag from Docker Hub if present
        run: |
          if curl -s -S 'https://registry.hub.docker.com/v2/repositories/tjdahl/dhub-test/tags/' | jq '."results"[]["name"]' | sort | grep -q "${{ github.event.client_payload.OLD_AMD_TAG }}"; then
            ./hub-tool tag rm --force tjdahl/dhub-test:${{ github.event.client_payload.OLD_AMD_TAG }} || true
          fi

      - name: Remove old arm64 tag from Docker Hub if present
        run: |
          if curl -s -S 'https://registry.hub.docker.com/v2/repositories/tjdahl/dhub-test/tags/' | jq '."results"[]["name"]' | sort | grep -q "${{ github.event.client_payload.OLD_ARM_TAG }}"; then
            ./hub-tool tag rm --force tjdahl/dhub-test:${{ github.event.client_payload.OLD_ARM_TAG }} || true
          fi

      - name: Logout of Docker Hub with hub-tool
        run: |
          ./hub-tool logout
