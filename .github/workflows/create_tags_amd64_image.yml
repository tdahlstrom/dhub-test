name: Create_Tags_&_AMD64_Image
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v4

      - name: Download dependencies from apt
        run: |
          sudo apt-get install -y qemu qemu-user-static

      - name: Check if :latest__amd64-XXXX and :latest__arm64-XXXX tags are present on Docker Hub
        run: |
          repo_tags=$(curl -s -S 'https://registry.hub.docker.com/v2/repositories/tjdahl/dhub-test/tags/')

          if echo $repo_tags | jq '."results"[]["name"]' | sort | grep -q "latest__amd64"; then
            echo "OLD_AMD_TAG=$(echo $repo_tags | jq '."results"[]["name"]' | sort | grep -P \^\.\*latest__amd64\.\*\$ | tr -d '"')" >> $GITHUB_ENV
          else
            echo "latest__amd64-XXXX tag isn't present on Docker Hub."
            exit 1
          fi

          if echo $repo_tags | jq '."results"[]["name"]' | sort | grep -q "latest__arm64"; then
            echo "OLD_ARM_TAG=$(echo $repo_tags | jq '."results"[]["name"]' | sort | grep -P \^\.\*latest__arm64\.\*\$ | tr -d '"')" >> $GITHUB_ENV
          else
            echo "latest__arm64-XXXX tag isn't present on Docker Hub."
            exit 1
          fi

      - name: Create amd64 tag
        run: |
          echo "NEW_AMD_TAG=latest__amd64-$(date +%s | tr -d '\n' | tail -c 4)" >> $GITHUB_ENV

      - name: Check that amd64 tags aren't the same
        run: |
          if [[ ${{ env.OLD_AMD_TAG}} == ${{ env.NEW_AMD_TAG}} ]]; then
            echo "OLD tag and NEWly generated tag for amd64 are the same."
            exit 1
          fi

      - name: Create arm64 tag
        run: |
          echo "NEW_ARM_TAG=latest__arm64-$(date +%s | tr -d '\n' | tail -c 4)" >> $GITHUB_ENV

      - name: Check that arm64 tags aren't the same
        run: |
          if [[ ${{ env.OLD_ARM_TAG}} == ${{ env.NEW_ARM_TAG}} ]]; then
            echo "OLD tag and NEWly generated tag for arm64 are the same."
            exit 1
          fi

      - name: Create amd64 image with tag
        run: |
          docker build -t tjdahl/dhub-test:${{ env.NEW_AMD_TAG }} --build-arg ARCH=amd64/ .

      - name: Test the built image
        run: |
          if [[ $(docker run --rm tjdahl/dhub-test:${{ env.NEW_AMD_TAG }}) != "test" ]]; then
            echo "Amd64 image failed to build properly."
            exit 1
          fi

      - name: Log into Docker Hub with docker
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin

      - name: Push amd64 image
        run: |
          docker push tjdahl/dhub-test:${{ env.NEW_AMD_TAG }}

      - name: Logout of Docker Hub with docker
        run: |
          docker logout

      - name: Send tag names to next create_images
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PAT }}
          repository: tdahlstrom/dhub-test
          event-type: event-tags-amd64-finished
          client-payload: |
            {
              "old_amd_tag": "${{ env.OLD_AMD_TAG }}",
              "old_arm_tag": "${{ env.OLD_ARM_TAG }}",
              "new_amd_tag": "${{ env.NEW_AMD_TAG }}",
              "new_arm_tag": "${{ env.NEW_ARM_TAG }}"
            }
