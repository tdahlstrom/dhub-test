name: Create_ARM64_Image
on:
  repository_dispatch:
    types: [event-tags-amd64-finished]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v4

      - name: Download dependencies from apt
        run: |
          sudo apt-get install -y qemu qemu-user-static

      - name: Create arm64 image with tag, check for arm64 specific Dockerfile
        run: |
          if [ -f ./Dockerfile/Dockerfile_arm64 ]; then
            docker buildx build --platform linux/arm64 -f ./Dockerfile/Dockerfile_arm64 -t tjdahl/dhub-test:${{ github.event.client_payload.NEW_AMD_TAG }} .
          else
            docker buildx build --platform linux/arm64 -t tjdahl/dhub-test:${{ github.event.client_payload.NEW_AMD_TAG }} .
          fi

      # CANNOT TEST ARM64 IMAGE ON AMD64 PLATFORM
      # - name: Test built image
      #   run: |
      #     if [[ $(docker run --rm tjdahl/dhub-test:${{ github.event.client_payload.NEW_AMD_TAG }}) != "test" ]]; then
      #       echo "Arm64 image failed to build properly."
      #       exit 1;
      #     fi

      - name: Log into Docker Hub with docker
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin

      - name: Push arm64 image
        run: |
          docker push tjdahl/dhub-test:${{ github.event.client_payload.NEW_AMD_TAG }}

      - name: Logout of Docker Hub with docker
        run: |
          docker logout

      - name: Send tag names to next create_images
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PAT }}
          repository: tdahlstrom/dhub-test
          event-type: event-arm64-finished
          client-payload: |
            {
              "OLD_AMD_TAG": "${{ github.event.client_payload.OLD_AMD_TAG }}",
              "OLD_ARM_TAG": "${{ github.event.client_payload.OLD_ARM_TAG }}",
              "NEW_AMD_TAG": "${{ github.event.client_payload.NEW_AMD_TAG }}",
              "NEW_ARM_TAG": "${{ github.event.client_payload.NEW_ARM_TAG }}"
            }
